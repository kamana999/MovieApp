version: "3"
services:
  flask:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - db
      - celery-worker
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    volumes:
      - data_volume:/app/data

  db:
    image: mongo:latest
    hostname: ${MONGO_DB_HOST}
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}

    volumes:
      - ./init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    ports:
      - "27017:27017"

  celery-worker:
    build:
      context: ./server
      dockerfile: Dockerfile-celery
    depends_on:
      - db
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - MONGO_URI=${MONGO_URI}
    volumes:
      - data_volume:/app/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - flask
    environment:
      - REACT_APP_SERVER_URL=http://localhost:5000

volumes:
  mongodb_data:
  data_volume:
